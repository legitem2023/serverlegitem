
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  detectRuntime,
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.5.2
 * Query Engine version: aebc046ce8b88ebbcb45efe31cbe7d06fd6abc0a
 */
Prisma.prismaVersion = {
  client: "5.5.2",
  engine: "aebc046ce8b88ebbcb45efe31cbe7d06fd6abc0a"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  accountCode: 'accountCode',
  password: 'password',
  activation: 'activation',
  accountLevel: 'accountLevel',
  loginAttemp: 'loginAttemp',
  macAddress: 'macAddress',
  agentIdentity: 'agentIdentity',
  image: 'image',
  nameOfStore: 'nameOfStore',
  dateCreated: 'dateCreated',
  dateUpdated: 'dateUpdated'
};

exports.Prisma.AccountDetailsScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  fullname: 'fullname',
  storeName: 'storeName',
  contactNo: 'contactNo',
  Address: 'Address',
  accountEmail: 'accountEmail',
  defaultAddress: 'defaultAddress'
};

exports.Prisma.CrowdMessagesScalarFieldEnum = {
  id: 'id',
  Messages: 'Messages',
  Sender: 'Sender',
  dateSent: 'dateSent'
};

exports.Prisma.PersonalMessagesScalarFieldEnum = {
  id: 'id',
  Messages: 'Messages',
  Sender: 'Sender',
  Reciever: 'Reciever',
  dateSent: 'dateSent'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  Name: 'Name',
  status: 'status',
  icon: 'icon',
  image: 'image'
};

exports.Prisma.ProductTypesScalarFieldEnum = {
  id: 'id',
  Category: 'Category',
  Name: 'Name'
};

exports.Prisma.BrandnameScalarFieldEnum = {
  id: 'id',
  ProductType: 'ProductType',
  Name: 'Name'
};

exports.Prisma.NewsScalarFieldEnum = {
  id: 'id',
  title: 'title',
  thumbnail: 'thumbnail',
  summary: 'summary',
  postedBy: 'postedBy',
  dateCreated: 'dateCreated'
};

exports.Prisma.InventoryScalarFieldEnum = {
  id: 'id',
  styleCode: 'styleCode',
  productType: 'productType',
  category: 'category',
  name: 'name',
  status: 'status',
  dateCreated: 'dateCreated',
  dateUpdated: 'dateUpdated',
  agentEmail: 'agentEmail',
  brandname: 'brandname',
  collectionItem: 'collectionItem'
};

exports.Prisma.ChildInventoryScalarFieldEnum = {
  id: 'id',
  productCode: 'productCode',
  category: 'category',
  productType: 'productType',
  productDescription: 'productDescription',
  imageReferences: 'imageReferences',
  brandname: 'brandname',
  model: 'model',
  style_Code: 'style_Code',
  name: 'name',
  color: 'color',
  size: 'size',
  price: 'price',
  stock: 'stock',
  status: 'status',
  thumbnail: 'thumbnail',
  parentId: 'parentId',
  creator: 'creator',
  editor: 'editor',
  dateCreated: 'dateCreated',
  dateUpdated: 'dateUpdated',
  agentEmail: 'agentEmail'
};

exports.Prisma.Inv_subImageScalarFieldEnum = {
  id: 'id',
  subImageRelationParent: 'subImageRelationParent',
  subImageRelationChild: 'subImageRelationChild',
  isVideo: 'isVideo',
  ImagePath: 'ImagePath'
};

exports.Prisma.AllowedDevicesScalarFieldEnum = {
  id: 'id',
  macAddress: 'macAddress'
};

exports.Prisma.NumberOfViewsScalarFieldEnum = {
  id: 'id',
  count: 'count',
  productCode: 'productCode',
  emailAddress: 'emailAddress',
  IpAddress: 'IpAddress',
  Country: 'Country',
  dateVisited: 'dateVisited'
};

exports.Prisma.OrderHistoryScalarFieldEnum = {
  id: 'id',
  Image: 'Image',
  Size: 'Size',
  Color: 'Color',
  productCode: 'productCode',
  emailAddress: 'emailAddress',
  TrackingNo: 'TrackingNo',
  OrderNo: 'OrderNo',
  Quantity: 'Quantity',
  Price: 'Price',
  Address: 'Address',
  Contact: 'Contact',
  agentEmail: 'agentEmail',
  OrderStatus: 'OrderStatus',
  StatusText: 'StatusText',
  dateCreated: 'dateCreated'
};

exports.Prisma.WebsiteVisitsScalarFieldEnum = {
  id: 'id',
  IpAddress: 'IpAddress',
  Country: 'Country',
  dateVisited: 'dateVisited'
};

exports.Prisma.PrivacyScalarFieldEnum = {
  id: 'id',
  content: 'content'
};

exports.Prisma.DisclaimerScalarFieldEnum = {
  id: 'id',
  content: 'content'
};

exports.Prisma.AboutScalarFieldEnum = {
  id: 'id',
  content: 'content'
};

exports.Prisma.FAQScalarFieldEnum = {
  id: 'id',
  question: 'question',
  answer: 'answer'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  id: 'id',
  email: 'email',
  accountCode: 'accountCode',
  password: 'password',
  activation: 'activation',
  accountLevel: 'accountLevel',
  loginAttemp: 'loginAttemp',
  macAddress: 'macAddress',
  agentIdentity: 'agentIdentity',
  image: 'image',
  nameOfStore: 'nameOfStore'
};

exports.Prisma.AccountDetailsOrderByRelevanceFieldEnum = {
  userId: 'userId',
  fullname: 'fullname',
  storeName: 'storeName',
  contactNo: 'contactNo',
  Address: 'Address',
  accountEmail: 'accountEmail'
};

exports.Prisma.CrowdMessagesOrderByRelevanceFieldEnum = {
  id: 'id',
  Messages: 'Messages',
  Sender: 'Sender'
};

exports.Prisma.PersonalMessagesOrderByRelevanceFieldEnum = {
  id: 'id',
  Messages: 'Messages',
  Sender: 'Sender',
  Reciever: 'Reciever'
};

exports.Prisma.CategoryOrderByRelevanceFieldEnum = {
  Name: 'Name',
  status: 'status',
  icon: 'icon',
  image: 'image'
};

exports.Prisma.ProductTypesOrderByRelevanceFieldEnum = {
  Category: 'Category',
  Name: 'Name'
};

exports.Prisma.BrandnameOrderByRelevanceFieldEnum = {
  ProductType: 'ProductType',
  Name: 'Name'
};

exports.Prisma.NewsOrderByRelevanceFieldEnum = {
  id: 'id',
  title: 'title',
  thumbnail: 'thumbnail',
  summary: 'summary',
  postedBy: 'postedBy'
};

exports.Prisma.InventoryOrderByRelevanceFieldEnum = {
  styleCode: 'styleCode',
  productType: 'productType',
  category: 'category',
  name: 'name',
  status: 'status',
  agentEmail: 'agentEmail',
  brandname: 'brandname'
};

exports.Prisma.ChildInventoryOrderByRelevanceFieldEnum = {
  productCode: 'productCode',
  category: 'category',
  productType: 'productType',
  productDescription: 'productDescription',
  imageReferences: 'imageReferences',
  brandname: 'brandname',
  model: 'model',
  style_Code: 'style_Code',
  name: 'name',
  color: 'color',
  size: 'size',
  status: 'status',
  thumbnail: 'thumbnail',
  parentId: 'parentId',
  creator: 'creator',
  editor: 'editor',
  agentEmail: 'agentEmail'
};

exports.Prisma.Inv_subImageOrderByRelevanceFieldEnum = {
  ImagePath: 'ImagePath'
};

exports.Prisma.AllowedDevicesOrderByRelevanceFieldEnum = {
  macAddress: 'macAddress'
};

exports.Prisma.NumberOfViewsOrderByRelevanceFieldEnum = {
  count: 'count',
  productCode: 'productCode',
  emailAddress: 'emailAddress',
  IpAddress: 'IpAddress',
  Country: 'Country',
  dateVisited: 'dateVisited'
};

exports.Prisma.OrderHistoryOrderByRelevanceFieldEnum = {
  id: 'id',
  Image: 'Image',
  Size: 'Size',
  Color: 'Color',
  productCode: 'productCode',
  emailAddress: 'emailAddress',
  TrackingNo: 'TrackingNo',
  OrderNo: 'OrderNo',
  Address: 'Address',
  Contact: 'Contact',
  agentEmail: 'agentEmail',
  OrderStatus: 'OrderStatus',
  StatusText: 'StatusText'
};

exports.Prisma.WebsiteVisitsOrderByRelevanceFieldEnum = {
  IpAddress: 'IpAddress',
  Country: 'Country',
  dateVisited: 'dateVisited'
};

exports.Prisma.PrivacyOrderByRelevanceFieldEnum = {
  id: 'id',
  content: 'content'
};

exports.Prisma.DisclaimerOrderByRelevanceFieldEnum = {
  id: 'id',
  content: 'content'
};

exports.Prisma.AboutOrderByRelevanceFieldEnum = {
  id: 'id',
  content: 'content'
};

exports.Prisma.FAQOrderByRelevanceFieldEnum = {
  id: 'id',
  question: 'question',
  answer: 'answer'
};


exports.Prisma.ModelName = {
  User: 'User',
  AccountDetails: 'AccountDetails',
  CrowdMessages: 'CrowdMessages',
  PersonalMessages: 'PersonalMessages',
  Category: 'Category',
  ProductTypes: 'ProductTypes',
  Brandname: 'Brandname',
  News: 'News',
  Inventory: 'Inventory',
  ChildInventory: 'ChildInventory',
  Inv_subImage: 'Inv_subImage',
  AllowedDevices: 'AllowedDevices',
  NumberOfViews: 'NumberOfViews',
  OrderHistory: 'OrderHistory',
  WebsiteVisits: 'WebsiteVisits',
  Privacy: 'Privacy',
  Disclaimer: 'Disclaimer',
  About: 'About',
  FAQ: 'FAQ'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        const runtime = detectRuntime()
        const edgeRuntimeName = {
          'workerd': 'Cloudflare Workers',
          'deno': 'Deno and Deno Deploy',
          'netlify': 'Netlify Edge Functions',
          'edge-light': 'Vercel Edge Functions',
        }[runtime]

        let message = 'PrismaClient is unable to run in '
        if (edgeRuntimeName !== undefined) {
          message += edgeRuntimeName + '. As an alternative, try Accelerate: https://pris.ly/d/accelerate.'
        } else {
          message += 'this browser environment, or has been bundled for the browser (running in `' + runtime + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://github.com/prisma/prisma/issues`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
