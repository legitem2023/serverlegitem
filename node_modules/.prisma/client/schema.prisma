generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextIndex", "fullTextSearch"]
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}
 
model User {
  id             String           @id @default(uuid())
  email          String           @unique
  accountCode    String?
  password       String?
  activation     String           @default("IN-ACTIVE")
  accountLevel   String?
  loginAttemp    String?
  macAddress     String?
  agentIdentity  String?
  image          String?
  nameOfStore    String?
  dateCreated    DateTime         @default(now())
  dateUpdated    DateTime?        @updatedAt
  accountDetails AccountDetails[]
}

model AccountDetails {
  id             Int     @id @default(autoincrement())
  userId         String
  fullname       String?
  storeName      String?
  contactNo      String?
  Address        String?
  accountEmail   String
  defaultAddress Boolean @default(false)
  User           User    @relation(fields: [userId], references: [id])
}

model CrowdMessages {
  id       String   @id @default(uuid())
  Messages String?
  Sender   String?
  dateSent DateTime @default(now())
}

model PersonalMessages {
  id       String   @id @default(uuid())
  Messages String?
  Sender   String?
  Reciever String?
  dateSent DateTime @default(now())
}

model Category {
  id     Int     @id @default(autoincrement())
  Name   String?
  status String?
  icon   String?
  image  String?
}

model ProductTypes {
  id       Int     @id @default(autoincrement())
  Category String?
  Name     String?
}

model Brandname {
  id          Int     @id @default(autoincrement())
  ProductType String?
  Name        String?
}

model News {
  id          String   @id @default(uuid())
  title       String?
  thumbnail   String?
  summary     String?
  postedBy    String?
  dateCreated DateTime @default(now())
}

model Inventory {
  id             Int              @id @default(autoincrement())
  styleCode      String           @unique @default(uuid())
  productType    String?
  category       String?
  name           String?
  status         String?
  dateCreated    DateTime         @default(now())
  dateUpdated    DateTime?        @updatedAt
  agentEmail     String?
  brandname      String?
  collectionItem Boolean?
  childInventory ChildInventory[]
}

model ChildInventory {
  id                  Int            @id @default(autoincrement())
  productCode         String?
  category            String?
  productType         String?
  productDescription  String?
  imageReferences     String?
  brandname           String?
  model               String?
  style_Code          String?
  name                String?
  color               String?
  size                String?
  price               Float?
  stock               Float?
  status              String?
  thumbnail           String?
  parentId            String?
  creator             String?
  editor              String?
  dateCreated         DateTime       @default(now())
  dateUpdated         DateTime?      @updatedAt
  agentEmail          String?
  childInventoryField Inventory?     @relation(fields: [style_Code], references: [styleCode])
  subImageFieldOut    Inv_subImage[]
}

model Inv_subImage {
  id                     Int            @id @default(autoincrement())
  subImageRelationParent Int?
  subImageRelationChild  Int
  isVideo                Boolean        @default(false)
  ImagePath              String?
  ChildField             ChildInventory @relation(fields: [subImageRelationChild], references: [id])
}

model AllowedDevices {
  id         Int     @id @default(autoincrement())
  macAddress String?
}

model NumberOfViews {
  id           Int     @id @default(autoincrement())
  count        String?
  productCode  String?
  emailAddress String?
  IpAddress    String?
  Country      String?
  dateVisited  String?
}

model OrderHistory {
  id           String   @unique @default(uuid())
  Image        String?
  Size         String?
  Color        String?
  productCode  String?
  emailAddress String?
  TrackingNo   String?
  OrderNo      String?
  Quantity     Int?
  Price        Float?
  Address      String?
  Contact      String?
  agentEmail   String?
  OrderStatus  String   @default("New Order")
  StatusText   String   @default("New Order")
  dateCreated  DateTime @default(now())
}

model WebsiteVisits {
  id          Int    @id @default(autoincrement())
  IpAddress   String
  Country     String
  dateVisited String
}

model Privacy {
    id  String   @unique @default(uuid())
    content String?
}

model Disclaimer {
    id  String   @unique @default(uuid())
    content String?
}

model About {
    id  String   @unique @default(uuid())
    content String?
}

model FAQ {
    id  String   @unique @default(uuid())
    question String?
    answer String?
}